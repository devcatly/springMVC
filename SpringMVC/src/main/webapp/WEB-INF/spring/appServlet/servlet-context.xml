<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently 
	serving up static resources in the ${webappRoot}/resources directory 
	정적인 파일들(css,images,js) 들에 대해 해당 요청에 대해 매핑을 찾지 않도록 아래
	경로를 등록해주자.
	-->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/images/**" location="/images/" />
	<resources mapping="/product_images/**" location="/product_images/" />


	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.myspring.myshop,com.myspring.memo.controller" />
	<context:component-scan base-package="com.myspring.memo.persistence"/>
	<context:component-scan base-package="com.myspring.persistence"/>	
	<context:component-scan base-package="com.myspring.service"/>	
	<context:component-scan base-package="com.myspring.util"/>	
	
	<!-- MultipartResolver설정 [파일업로드 관련] ======================== 
		주의: id는 반드시 multipartResolver로 등록해야 한다.
		    다른 아이디를 주면 DispatcherServlet이 MultipartResolver로 인식하지 못한다.
	-->
	<beans:bean id="multipartResolver"	 class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="defaultEncoding" value="UTF-8"/>
		<beans:property name="maxUploadSize" value="-1"/>
		<!-- -1을 주면 업로드 용량 무제한 -->
	</beans:bean>
	<!--  Interceptor설정 ===========================================-->
	<interceptors>
		<interceptor>
			<mapping path="/user/**"/>
			<mapping path="/admin/**"/>
			<beans:bean class="com.myspring.interceptor.LoginCheckInterceptor"/>
		</interceptor>
		<interceptor>
			<mapping path="/admin/**"/>
			<beans:bean class="com.myspring.interceptor.AdminCheckInterceptor"/>
		</interceptor>
		
	</interceptors>
	<!-- 단순히 jsp파일을 보여주기 위한 용도라면 view-controller에 설정해도 된다. -->
	<view-controller path="/prodMgr" view-name="/ajax/prodManage"/>
	<view-controller path="/dropDown" view-name="/ajax/categoryDrop"/> 
	
</beans:beans>
